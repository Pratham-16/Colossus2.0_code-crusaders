#include <Wire.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <TinyGPSPlus.h>

MPU6050 mpu;
TinyGPSPlus gps;

const int trigPin = 7;
const int echoPin = 6;


SoftwareSerial gpsSerial(4, 3); 


int16_t prevAx = 0, prevAy = 0, prevAz = 0;
bool isMoving = false;

void setup() {
  Serial.begin(9600);
  gpsSerial.begin(9600); 

  Wire.begin();                
  mpu.initialize();

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  if (mpu.testConnection()) {
    Serial.println("MPU6050 connected.");
  } else {
    Serial.println("MPU6050 connection failed.");
  }

  Serial.println("System Ready");
}

void loop() {

  int16_t ax, ay, az;
  mpu.getAcceleration(&ax, &ay, &az);

  int deltaX = abs(ax - prevAx);
  int deltaY = abs(ay - prevAy);
  int deltaZ = abs(az - prevAz);

 
  if (deltaX > 1000 || deltaY > 1000 || deltaZ > 1000) {
    isMoving = true;
  } else {
    isMoving = false;
  }

  prevAx = ax;
  prevAy = ay;
  prevAz = az;

  if (isMoving) {
    Serial.println("Status: Walking");

    
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);

    long duration = pulseIn(echoPin, HIGH);
    int distance = duration * 0.034 / 2;

    Serial.print("Obstacle at: ");
    Serial.print(distance);
    Serial.println(" cm");

  
    while (gpsSerial.available() > 0) {
      gps.encode(gpsSerial.read());
    }

    if (gps.location.isUpdated()) {
      Serial.print("GPS Location: ");
      Serial.print(gps.location.lat(), 6);
      Serial.print(", ");
      Serial.println(gps.location.lng(), 6);
    } else {
      Serial.println("Waiting for GPS fix...");
    }

  } else {
    Serial.println("Status: Sitting/Still | System Off");
  }

  delay(500);
}